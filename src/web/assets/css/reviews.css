@font-face {
  font-family: "OpenSans-Light";
  src: url("../fonts/OpenSans-Light.woff") format("woff"), url("../fonts/OpenSans-Light.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-LightItalic";
  src: url("../fonts/OpenSans-LightItalic.woff") format("woff"), url("../fonts/OpenSans-LightItalic.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-Regular";
  src: url("../fonts/OpenSans-Regular.woff") format("woff"), url("../fonts/OpenSans-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-Italic";
  src: url("../fonts/OpenSans-Italic.woff") format("woff"), url("../fonts/OpenSans-Italic.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-SemiBold";
  src: url("../fonts/OpenSans-SemiBold.woff") format("woff"), url("../fonts/OpenSans-SemiBold.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-SemiBoldItalic";
  src: url("../fonts/OpenSans-SemiBoldItalic.woff") format("woff"), url("../fonts/OpenSans-SemiBoldItalic.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-Bold";
  src: url("../fonts/OpenSans-Bold.woff") format("woff"), url("../fonts/OpenSans-Bold.ttf") format("truetype");
}

@font-face {
  font-family: "OpenSans-BoldItalic";
  src: url("../fonts/OpenSans-BoldItalic.woff") format("woff"), url("../fonts/OpenSans-BoldItalic.ttf") format("truetype");
}

.qarr .toolbar {
  margin-bottom: 0;
}

.qarr .toolbar .flex > * {
  margin: 0 !important;
}

.qarr .toolbar .btn {
  height: 100%;
  padding: 16px 15px;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  background: #E9EFF4;
  font-family: "OpenSans-Regular", "Helvetica", sans-serif;
  font-weight: 600;
  color: #4a7294;
  border-radius: 5px;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .selectallcontainer .btn {
  background: none !important;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.qarr .selectallcontainer .checkbox:before {
  font-family: 'Craft';
  speak: none;
  -webkit-font-feature-settings: "liga", "dlig";
  -ms-font-feature-settings: "liga", "dlig";
  -o-font-feature-settings: "liga", "dlig";
  font-feature-settings: "liga", "dlig";
  text-rendering: optimizeLegibility;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  text-align: center;
  font-style: normal;
  vertical-align: middle;
  word-wrap: normal !important;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  content: 'check';
  -webkit-box-shadow: none;
          box-shadow: none;
  border: none;
  font-size: 20px !important;
  color: #E9EFF4;
  background: none;
}

.qarr .selectallcontainer .checkbox.checked:before {
  color: #B289EF;
}

.qarr .elements .tableview td.checkbox-cell div.checkbox {
  top: calc(50% - 11px);
}

.qarr .elements .checkbox:before {
  font-family: 'Craft';
  speak: none;
  -webkit-font-feature-settings: "liga", "dlig";
  -ms-font-feature-settings: "liga", "dlig";
  -o-font-feature-settings: "liga", "dlig";
  font-feature-settings: "liga", "dlig";
  text-rendering: optimizeLegibility;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  text-align: center;
  font-style: normal;
  vertical-align: middle;
  word-wrap: normal !important;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  content: 'check';
  -webkit-box-shadow: none;
          box-shadow: none;
  border: none;
  font-size: 20px !important;
  color: #E9EFF4;
  background: none;
}

.qarr .elements .sel .checkbox:before {
  color: #B289EF;
}

.qarr .element {
  padding: 0;
}

.qarr .element a {
  color: #474747;
  font-weight: 700 !important;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
}

.qarr .element a:hover {
  color: #B289EF;
}

.qarr .badge-wrapper .entry-badge {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0;
  border-radius: 4px;
  width: 28px;
  height: 28px;
  font-family: "OpenSans-Regular", "Helvetica", sans-serif;
  font-size: 10px;
  font-weight: 600;
}

.qarr .guest-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.qarr .guest-wrapper .guest-avatar {
  position: relative;
}

.qarr .guest-wrapper .guest-avatar > * {
  border-radius: 5px;
}

.qarr .guest-wrapper img {
  display: block;
  width: 35px;
  border-radius: 5px;
  opacity: .5;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
}

.qarr .guest-wrapper:hover .purple-blanket {
  opacity: 0;
}

.qarr .guest-wrapper:hover img {
  opacity: 1;
}

.qarr .guest-wrapper .guest-meta {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-left: 10px;
}

.qarr .guest-wrapper .guest-meta span {
  display: block;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
  line-height: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .guest-wrapper .guest-meta .guest-name {
  font-family: "OpenSans-Bold", "Helvetica", sans-serif;
}

.qarr .guest-wrapper .guest-meta .guest-email {
  color: #a5a6a8;
  font-size: 10px;
}

.qarr .reports-wrapper svg {
  color: #f07575;
  font-size: 16px;
}

.qarr .rating-wrapper span {
  padding-right: 2px;
}

.qarr .rating-wrapper svg {
  color: #FFD012;
}

.qarr .product-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.qarr .product-wrapper .product-meta {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin-left: 10px;
}

.qarr .product-wrapper .product-meta span {
  display: block;
  line-height: 1;
}

.qarr .product-wrapper .product-badge-wrapper .product-badge {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0;
  border-radius: 4px;
  width: 28px;
  height: 28px;
  font-weight: 600;
}

.qarr .product-wrapper .product-name {
  font-weight: 600;
  padding-bottom: 4px;
}

.qarr .product-wrapper .product-type {
  color: #a5a6a8;
  font-size: 10px;
}

.qarr .date-wrapper {
  color: #a5a6a8;
}

.qarr .overview-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
}

.qarr .overview-wrapper > div {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  border-radius: 5px;
  padding: 20px;
  margin: 0 10px 30px 10px;
  text-align: center;
}

.qarr .overview-wrapper > div.items-total {
  background: #B289EF;
}

.qarr .overview-wrapper > div.items-pending {
  background: #4da1ff;
}

.qarr .overview-wrapper > div.items-approved {
  background: #2fec94;
}

.qarr .overview-wrapper > div.items-rejected {
  background: #f07575;
}

.qarr .overview-wrapper .overview-heading {
  font-family: "OpenSans-Regular", "Helvetica", sans-serif;
  font-size: 16px;
  font-weight: 700;
  letter-spacing: .02em;
  color: white;
  margin-bottom: 10px;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .overview-wrapper .overview-value {
  font-size: 21px;
  font-weight: 800;
  color: white;
}

.qarr .feedback-wrapper {
  color: #474747;
}

.qarr table thead th {
  font-family: "OpenSans-Regular", "Helvetica", sans-serif;
  font-size: 10px;
  color: #a5a6a8;
  letter-spacing: .1em;
  text-transform: uppercase;
  padding: 15px 0 15px 15px !important;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr table.data tbody tr td.checkbox-cell {
  padding-right: 25px !important;
}

.qarr table.data tbody tr:first-child td {
  border-top-style: none;
}

.qarr table.data tbody tr:first-child td:first-child {
  border-top-left-radius: 4px;
}

.qarr table.data tbody tr:first-child td:last-child {
  border-top-right-radius: 4px;
}

.qarr table.data tbody tr:last-child td {
  border-bottom: none !important;
}

.qarr table.data tbody tr:last-child td:first-child {
  border-bottom-left-radius: 4px;
}

.qarr table.data tbody tr:last-child td:last-child {
  border-bottom-right-radius: 4px;
}

.qarr table.data tbody tr:hover td {
  position: relative;
  z-index: 1;
  -webkit-box-shadow: 1px 2px 10px -2px rgba(0, 0, 0, 0.1);
          box-shadow: 1px 2px 10px -2px rgba(0, 0, 0, 0.1);
}

.qarr table.data tbody tr.sel td {
  background: rgba(178, 137, 239, 0.1) !important;
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border-bottom: 1px solid rgba(178, 137, 239, 0.2);
}

.qarr table.data tbody td {
  background: white;
  padding: 15px;
  font-size: 12px;
  font-weight: 400;
  letter-spacing: .02em;
  border-bottom: 1px solid #E9EFF4;
  -webkit-transition: all .3s ease;
  transition: all .3s ease;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .fld-tab .tabs, .qarr .draghelper.fld-tab .tabs {
  position: relative;
  padding: 0;
  background: rgba(128, 128, 128, 0.2);
  width: 100%;
  border-radius: 5px;
}

.qarr .fld-tab .tabs:hover {
  background: rgba(128, 128, 128, 0.3);
}

.qarr .fld-tab .tabs .tab {
  height: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0;
  border: none;
  float: none !important;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  background: #B289EF;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.qarr .fld-tab .tabs .tab span {
  font-family: "OpenSans-Regular", "Helvetica", sans-serif;
  font-weight: 700;
  text-transform: none;
  color: #ffffff;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .fld-tab .tabs .tab a:before {
  color: white;
}

.qarr .fld-tab .tabs .settings {
  margin-left: auto;
}

.qarr .fld-tab .tabs .field-options-preview {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background: #637c8a;
  padding: 0 12px 10px;
  margin-top: -4px;
}

.qarr .fld-tab .tabs .field-options-preview:before {
  display: none !important;
}

.qarr .fld-tab .tabs .field-options-preview > div {
  color: rgba(255, 255, 255, 0.5);
  margin-right: 10px;
  font-weight: 100;
  letter-spacing: .05em;
}

.qarr .fld-tab .tabs .field-options-preview .preview-type {
  letter-spacing: normal;
}

.qarr .fld-tab .fld-tabcontent, .qarr .draghelper.fld-tab .fld-tabcontent {
  position: relative;
  padding: 0;
  border: none;
}

.qarr .fld-tab .fld-tabcontent .fld-field, .qarr .draghelper.fld-tab .fld-tabcontent .fld-field, .qarr .draghelper.fld-field {
  padding: 15px 20px;
  border: none;
  border-bottom: 1px solid rgba(128, 128, 128, 0.1);
  border-left: 1px solid rgba(128, 128, 128, 0.1);
  border-right: 1px solid rgba(128, 128, 128, 0.1);
  background: #ffffff;
}

.qarr .fld-tab .fld-tabcontent .fld-field:hover, .qarr .draghelper.fld-field:hover {
  background: #fcfcfc;
}

.qarr .fld-tab .fld-tabcontent .fld-field span:not(.preview-type), .qarr .draghelper.fld-field span:not(.preview-type) {
  font-weight: 500;
  font-size: 12px;
  text-transform: none;
  color: #323C47;
}

.qarr .fld-tab .fld-tabcontent .fld-field + .fld-field, .qarr .draghelper.fld-field + .fld-field {
  margin: 0;
}

.qarr .fld-tab .fld-tabcontent .fld-field .field-icon, .qarr .draghelper.fld-field .field-icon {
  display: inline-block;
  width: 20px;
  text-align: center;
}

.qarr .fld-tab .fld-tabcontent .field-not-allowed.fld-field:after, .qarr .field-not-allowed.draghelper.fld-field:after {
  display: block;
  content: "Field not allowed, will not display";
  font-size: 10px;
  color: rgba(240, 117, 117, 0.6);
}

.qarr .fld-tab .fld-tabcontent .fld-field.fld-insertion, .qarr .fld-tab.fld-insertion {
  margin: 25px !important;
  border: 2px dashed #B289EF;
  background-color: rgba(178, 137, 239, 0.1);
}

.qarr .fld-tab .fld-tabcontent .fld-field.fld-insertion .tabs, .qarr .fld-tab.fld-insertion .tabs, .qarr .fld-tab .fld-tabcontent .fld-field.fld-insertion .tab, .qarr .fld-tab.fld-insertion .tab, .qarr .fld-tab .fld-tabcontent .fld-field.fld-insertion .fld-tabcontent, .qarr .fld-tab.fld-insertion .fld-tabcontent {
  background: none;
  border: none;
}

.qarr .fields-wrapper {
  width: 100%;
  padding-top: 30px;
}

.qarr .fields-wrapper h1 {
  font-family: "OpenSans-SemiBold", "Helvetica", sans-serif;
  font-size: 16px;
  margin-bottom: 80px;
}

.qarr #fieldlayoutform {
  position: relative;
  background-image: none;
  background: white;
  border-radius: 5px;
  border: 1px solid #E9EFF4;
  padding: 25px;
}

.qarr #fieldlayoutform .field-warning {
  font-family: #4A4A4A;
  font-size: 12px;
  color: #a5a6a8;
}

.qarr #fieldlayoutform .field-warning a {
  color: #B289EF;
}

.qarr #fieldlayoutform .field-warning a:hover {
  color: #966df3;
}

.qarr #fieldlayoutform hr {
  border-color: #d8e3ec;
}

.qarr #fieldlayoutform .newtabbtn-container {
  position: absolute;
  top: -50px;
  left: 0;
  z-index: 1;
  padding: 0;
  margin: 0;
}

.qarr #fieldlayoutform .newtabbtn-container:before {
  display: none;
}

.qarr #fieldlayoutform .newtabbtn-container .btn.icon {
  padding: 12px 35px 10px;
}

.qarr #fieldlayoutform .newtabbtn-container .btn.icon:before {
  content: "+";
}

.qarr #fieldlayoutform .newtabbtn-container .settings-button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-left: auto;
}

.qarr #fieldlayoutform .settings-preview {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  font-size: 10px;
  color: rgba(71, 71, 71, 0.6);
  line-height: 1.2;
  margin-left: 10px;
}

.qarr #fieldlayoutform .settings-preview span {
  text-transform: uppercase;
  font-weight: 900;
  font-size: 8px;
}

.qarr #fieldlayoutform header {
  padding: 0;
  margin-bottom: 20px;
  border-bottom: none;
}

.qarr #fieldlayoutform header.unused-header {
  margin-bottom: 0;
  padding: 25px;
  border: 1px solid #E9EFF4;
  border-bottom: none;
  background-color: white;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.qarr #fieldlayoutform header p {
  padding: 0;
  margin: 0;
  font-size: 10px;
  font-weight: 100;
  color: #989898;
  text-transform: none;
}

.qarr .fld-tabs {
  margin: 0 !important;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.qarr .fld-tabs > .fld-tab {
  float: none !important;
  margin: 0 3.5% 3.5% 0 !important;
  padding: 0 !important;
  width: 31%;
}

.qarr .fld-tabs > .fld-tab:nth-child(3n + 4) {
  margin-right: 0 !important;
}

.qarr .fld-tabs > .fld-tab.fld-tab-caboose {
  border: 2px dashed #E9EFF4;
  padding: 0 !important;
  margin: 0 !important;
}

.qarr .unusedfields {
  margin: 0 !important;
  padding: 0 !important;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-color: white;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.qarr .unusedfields .heading {
  padding: 20px 25px;
  margin: 20px -25px 20px -25px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: #E9EFF4;
}

.qarr .unusedfields .heading p {
  font-family: "OpenSans-Bold", "Helvetica", sans-serif;
  font-size: 10px;
  color: #4a7294;
  letter-spacing: .05em;
  text-transform: uppercase;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
}

.qarr .unusedfields .fld-tab {
  width: 31%;
  margin-right: 2.3333%;
}

.qarr .fld-tab {
  margin-left: 0 !important;
  margin-bottom: 30px !important;
  height: 100% !important;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.qarr .fld-tab .fld-tabcontent .fld-field.fld-required span:after {
  color: #f07575;
}

.qarr .fld-tab .fld-tabcontent .fld-field a:before {
  color: #c9c9c9;
}

.qarr .fld-tab .fld-tabcontent .fld-field + .fld-field {
  margin: 0;
}

.qarr .fld-tab .fld-tabcontent .fld-field.fld-insertion {
  margin: 0 !important;
}

.qarr .fld-tab .fld-tabcontent .fld-tab.fld-tab-caboose {
  margin: 0 !important;
  padding: 0 !important;
  min-height: auto !important;
  height: 52px !important;
  width: 100%;
  border: 2px dashed #E9EFF4 !important;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.qarr .draghelper.fld-field .settings:before {
  color: #989898 !important;
  opacity: .2;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/