{"version":3,"sources":["webpack:///webpack/bootstrap f2be000b272777c33bf7","webpack:///./development/js/qarrcp.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","QarrCP","Garnish","Base","extend","$navContainer","$navIcon","$navLabel","$navLabelBadge","navIconSvg","totalPending","init","this","$","find","append","_getPendingEntries","handleResponse","response","html","updatedPendingCounter","value","_this","Craft","postActionRequest","proxy","textStatus","success","$doc","ready","window","qarrnav"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,2DC7DA,IAAIC,EAASC,QAAQC,KAAKC,QACtBC,cAAe,KACfC,SAAU,KACVC,UAAW,KACXC,eAAgB,KAEhBC,WAAY,KACZC,aAAc,KAEdC,KAT6B,WAUzBC,KAAKP,cAAgBQ,EAAE,aACvBD,KAAKN,SAAWM,KAAKP,cAAcS,KAAK,SACxCF,KAAKL,UAAYK,KAAKP,cAAcS,KAAK,UACzCF,KAAKH,WAAaG,KAAKN,SAASQ,KAAK,OAErCF,KAAKL,UAAUQ,OAAOF,EAAE,oDACxBD,KAAKJ,eAAiBI,KAAKL,UAAUO,KAAK,QAE1CF,KAAKI,sBAITC,eAtB6B,SAsBdC,GACXN,KAAKF,aAAeQ,EAASR,aAC7BE,KAAKJ,eAAeW,KAAKP,KAAKF,eAGlCU,sBA3B6B,SA2BPC,GAClBT,KAAKF,aAAeW,EACpBT,KAAKJ,eAAeW,KAAKE,IAI7BL,mBAjC6B,WAiCR,IAAAM,EAAAV,KACjBW,MAAMC,kBAAkB,8BAA+BX,EAAEY,MAAO,SAACP,EAAUQ,GACnER,EAASS,SACTL,EAAKL,eAAeC,IAExBN,UAIZV,QAAQ0B,KAAKC,MAAM,WACfC,OAAOC,QAAU,IAAI9B","file":"/release/src/web/assets/js/qarrcp.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f2be000b272777c33bf7","let QarrCP = Garnish.Base.extend({\n    $navContainer: null,\n    $navIcon: null,\n    $navLabel: null,\n    $navLabelBadge: null,\n\n    navIconSvg: null,\n    totalPending: null,\n\n    init() {\n        this.$navContainer = $('#nav-qarr')\n        this.$navIcon = this.$navContainer.find('.icon');\n        this.$navLabel = this.$navContainer.find('.label');\n        this.navIconSvg = this.$navIcon.find('svg');\n\n        this.$navLabel.append($('<span class=\"qarr-pending-count-badge\">0</span>'));\n        this.$navLabelBadge = this.$navLabel.find('span');\n\n        this._getPendingEntries();\n\n    },\n\n    handleResponse(response) {\n        this.totalPending = response.totalPending;\n        this.$navLabelBadge.html(this.totalPending);\n    },\n\n    updatedPendingCounter(value) {\n        this.totalPending = value;\n        this.$navLabelBadge.html(value);\n\n    },\n\n    _getPendingEntries() {\n        Craft.postActionRequest('qarr/elements/check-pending', $.proxy(((response, textStatus) => {\n            if (response.success) {\n                this.handleResponse(response);\n            }\n        }), this))\n    }\n});\n\nGarnish.$doc.ready(function () {\n    window.qarrnav = new QarrCP();\n});\n\n\n// WEBPACK FOOTER //\n// ./development/js/qarrcp.js"],"sourceRoot":""}